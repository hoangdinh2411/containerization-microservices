name: build and push docker images

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ['api-gateway','logs-service','menu-service','order-cafe','order-service']
    steps:
      - name: checkout code
        uses: actions/checkout@v4
      - name: login to docker hub
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKERHUB_USERNAME }}
          password: ${{secrets.DOCKERHUB_TOKEN }}
      - name: Build and push ${{ matrix.service }}
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.service }}
          file: ./${{ matrix.service }}/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            if [ ! -d "/home/ubuntu/containerization-microservices" ]; then
              cd /home/ubuntu
              git clone https://github.com/hoangdinh2411/containerization-microservices.git
            else
              cd /home/ubuntu/containerization-microservices
              git pull origin main || true
            fi

            cd /home/ubuntu/containerization-microservices
            docker compose pull
            docker compose down
            docker compose up -d --build
